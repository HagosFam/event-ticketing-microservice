services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: yohannes
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5431:5432"
    networks:
      - postgres
      - spring
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
      - spring
    restart: unless-stopped
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    container_name: elasticsearch_springboot
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic
      - spring

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.0
    container_name: kibana_springboot
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    networks:
      - elastic
      - spring

  logstash:
    image: docker.elastic.co/logstash/logstash:7.12.0
    container_name: logstash_springboot
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elastic
      - spring
    depends_on:
      - elasticsearch
  mongo:
    image: mongo:6-jammy
    ports:
      - '27017:27017'
    volumes:
      - mongovlm:/data/db

    networks:
      - spring
  configServer:
    image: koedakyokotsu/config-server:latest
    container_name: config-server
    ports:
      - "8071:8071"
    networks:
      - spring
  eurekaServer:
    image: koedakyokotsu/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - configServer
      - zipkin
  users:
    image: koedakyokotsu/user-management-service:latest
    container_name: users
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin
      - eurekaServer
      - configServer
      - logstash
      - elasticsearch
      - kibana
  tickets:
    image: koedakyokotsu/ticketing-service:latest
    container_name: tickets
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin
      - eurekaServer
      - configServer
      - logstash
      - elasticsearch
      - kibana

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - spring

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
        - "29092:29092"
    environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - spring
  orders:
    image: koedakyokotsu/order-service:latest
    container_name: orders
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin
      - eurekaServer
      - configServer
      - logstash
      - elasticsearch
      - kibana
  notifiactions:
    image: koedakyokotsu/notification-service
    container_name: notifications
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin
      - eurekaServer
      - configServer
      - logstash
      - elasticsearch
      - kibana
  events:
    image: koedakyokotsu/event-management-service:latest
    container_name: events
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin
      - eurekaServer
      - configServer
      - logstash
      - elasticsearch
      - kibana
  eventAnalysis:
    image: koedakyokotsu/event-analysing-service:latest
    container_name: eventAnalysis
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin
      - eurekaServer
      - configServer
      - logstash
      - elasticsearch
      - kibana

networks:
  elastic:
    driver: bridge
  postgres:
    driver: bridge
  spring:
    driver: bridge


volumes:
  mongovlm:
  elasticsearch_data:
    driver: local
  postgres:
  pgadmin: